---
name: "HelmRepository Sync"

on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Flux HelmRepository Name
        required: true
      repoNamespace:
        description: Flux HelmRepository Namespace
        default: flux-system
        required: true
  pull_request:
    branches: ["main"]
    paths: ["kubernetes/**/helmrelease.yaml"]

jobs:
  sync:
    name: Flux HelmRepository Sync
    runs-on: ["arc-remote-ops"]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Setup yq
        run: |
          set -ex
          ARCH="$(uname -m)"
          case "${ARCH}" in
            x86_64|amd64)
              ARCH=amd64
              ;;
            aarch64|arm64)
              ARCH=arm64
              ;;
          esac
          sudo curl -SL -o /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/latest/download/yq_linux_${ARCH}"
          sudo chmod a+x /usr/local/bin/yq

      - name: Setup Flux
        uses: fluxcd/flux2/action@5c5c15ea212b8f029a110f9975851d25c8272695 # v2.2.2

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
        with:
          encodedString: "${{ secrets.KUBECONFIG }}"
          fileName: kubeconfig

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@62f4729b5df35e6e0e01265fa70a82ccaf196b4b # v41.1.1
        with:
          files: kubernetes/**/helmrelease.yaml

      - name: Sync HelmRepository
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        shell: bash
        run: |
          declare -a repos=()
          for file in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
            repoName="$(yq eval '.spec.chart.spec.sourceRef.name' "${file}")"
            repoNamespace="$(yq eval '.spec.chart.spec.sourceRef.namespace' "${file}")"
            repos+=("${repoName}:${repoNamespace}")
          done
          repos=($(for r in ${repos[@]}; do echo $r; done | sort -u))
          for repo in ${repos[@]}; do
            flux --namespace "${repo##*:}" reconcile source helm "${repo%%:*}"
          done

      - if: ${{ github.event.inputs.repoName != '' }}
        name: Sync HelmRepository
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        shell: bash
        run: |
          flux --namespace ${{ github.event.inputs.repoNamespace }} reconcile \
            source helm ${{ github.event.inputs.repoName }}
