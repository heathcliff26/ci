---
name: "Link Check"

on:
  workflow_call:
    inputs:
      exclude-links:
        description: Exclude specific URLs
        type: string
        required: false
        default: ""
      exclude-paths:
        description: Exclude specific paths
        type: string
        required: false
        default: ""

env:
  WORKFLOW_ISSUE_TITLE: "Link Checker Dashboard ðŸ”—"

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1.11.0
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Create exclude flags
        id: exclude-flags
        run: |
          set -ex
          IFS=' ' read -r -a excluded_urls <<< "${{ inputs.exclude-links }}"
          IFS=' ' read -r -a excluded_paths <<< "${{ inputs.exclude-paths }}"
          urls=""
          paths=""
          for url in "${excluded_urls[@]}"; do
              if [ -n "${url}" ]; then
                  urls="${urls} --exclude ${url}"
              fi
          done
          for path in "${excluded_paths[@]}"; do
              if [ -n "${path}" ]; then
                  paths="${paths} --exclude-path ${path}"
              fi
          done
          echo "urls=${urls}" >> "$GITHUB_OUTPUT"
          echo "paths=${paths}" >> "$GITHUB_OUTPUT"

      - name: Scan for broken links
        uses: lycheeverse/lychee-action@7cd0af4c74a61395d455af97419279d86aafaede # v2.0.2
        id: lychee
        env:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"
        with:
          args: --verbose --no-progress ${{ steps.exclude-flags.outputs.urls }} ${{ steps.exclude-flags.outputs.paths }} --exclude-mail './**/*.md'

      - name: Find Link Checker Issue
        id: find-issue
        shell: bash
        env:
          GH_TOKEN: "${{ steps.app-token.outputs.token }}"
        run: |
          issue_number=$( \
              gh issue list \
                  --search "in:title ${{ env.WORKFLOW_ISSUE_TITLE }}" \
                  --state open \
                  --json number \
                  | jq --raw-output '.[0].number' \
          )
          echo "issue-number=${issue_number}" >> $GITHUB_OUTPUT
          echo "${issue_number}"

      - name: Update Issue
        uses: peter-evans/create-issue-from-file@e8ef132d6df98ed982188e460ebb3b5d4ef3a9cd # v5.0.1
        with:
          title: "${{ env.WORKFLOW_ISSUE_TITLE }}"
          issue-number: "${{ steps.find-issue.outputs.issue-number || '' }}"
          content-filepath: ./lychee/out.md
          token: "${{ steps.app-token.outputs.token }}"
