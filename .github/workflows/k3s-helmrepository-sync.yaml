---
name: "Kubernetes Helmrepository Sync"

on:
  workflow_call:
    inputs:
      cluster:
        description: Name of the cluster
        type: string
        required: false
        default: "${{ github.event.repository.name }}"
      kubeconfig:
        description: Name of the secret containing the cluster specific kubeconfig
        type: string
        required: false
        default: "KUBECONFIG"

jobs:
  sync:
    runs-on: ["arc-${{ inputs.cluster }}"]
    steps:
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          fetch-depth: 0

      - name: Setup yq
        run: |
          set -ex
          ARCH="$(uname -m)"
          case "${ARCH}" in
            x86_64|amd64)
              ARCH=amd64
              ;;
            aarch64|arm64)
              ARCH=arm64
              ;;
          esac
          sudo curl -SL -o /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/latest/download/yq_linux_${ARCH}"
          sudo chmod a+x /usr/local/bin/yq

      - name: Setup Flux
        uses: fluxcd/flux2/action@534684601ec8888beb0cc4f51117b59e97606c4d # v2.2.3

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
        with:
          encodedString: "${{ secrets[inputs.kubeconfig] }}"
          fileName: kubeconfig

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@0874344d6ebbaa00a27da73276ae7162fadcaf69 # v44.3.0
        with:
          files: kubernetes/${{ inputs.cluster }}/**/helmrelease.yaml

      - name: Sync HelmRepository
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        shell: bash
        run: |
          declare -a repos=()
          for file in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
            repoName="$(yq eval '.spec.chart.spec.sourceRef.name' "${file}")"
            repoNamespace="$(yq eval '.spec.chart.spec.sourceRef.namespace' "${file}")"
            repos+=("${repoName}:${repoNamespace}")
          done
          repos=($(for r in ${repos[@]}; do echo $r; done | sort -u))
          for repo in ${repos[@]}; do
            flux --namespace "${repo##*:}" reconcile source helm "${repo%%:*}"
          done
