---
name: "Build Container"

on:
  workflow_call:
    inputs:
      app:
        description: "The name of the app"
        type: string
        default: "${{ github.event.repository.name }}"
        required: false
      context:
        description: "The folder to build in"
        type: string
        default: "."
        required: false
      dockerfile:
        description: "Use to override Dockerfile path"
        type: string
        default: "Dockerfile"
        required: false
      tag:
        description: "Use to set tag, default: rolling"
        type: string
        default: "rolling"
        required: false
      tags:
        description: "Use to set multiple tags, always includes tag, defaults to latest if main branch"
        type: string
        default: "type=raw,value=latest,enable={{is_default_branch}}"
        required: false
      build-args:
        description: "Set build-args, can be multiline string"
        type: string
        default: ""
        required: false
      dry-run:
        description: "Use to disable pushing"
        type: boolean
        default: false
        required: false

jobs:
  build-images:
    runs-on: ${{ matrix.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log in to the ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        if: ${{ ! inputs.dry-run }}
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Log in to the Dockerhub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        if: ${{ ! inputs.dry-run }}
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_TOKEN }}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            "${{ secrets.DOCKER_USERNAME }}/${{ inputs.app }}"
            "ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}"
          tags: |
            "${{ inputs.tag }}"
            "${{ inputs.tags }}"

      - name: Add arch to tags
        id: tags
        env:
          TAGS: "${{ steps.meta.outputs.tags }}"
          ARCH: "${{ matrix.arch }}"
        run: |
          set -ex
          readarray -t tags <<< $(echo -e "${TAGS}")
          echo 'tags<<EOF' >> $GITHUB_OUTPUT
          for tag in "${tags[@]}"; do
            echo "$tag-$ARCH" >> $GITHUB_OUTPUT
          done
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "${{ inputs.context }}"
          platforms: "linux/${{ matrix.arch }}"
          file: "${{ inputs.context }}/${{ inputs.dockerfile }}"
          push: ${{ ! inputs.dry-run }}
          tags: "${{ steps.tags.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
          build-args: "${{ inputs.build-args }}"

  combine-manifests:
    runs-on: ubuntu-latest
    needs:
      - build-images
    steps:
      - name: Log in to the ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        if: ${{ ! inputs.dry-run }}
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Log in to the Dockerhub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        if: ${{ ! inputs.dry-run }}
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_TOKEN }}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            "${{ secrets.DOCKER_USERNAME }}/${{ inputs.app }}"
            "ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}"
          tags: |
            "${{ inputs.tag }}"
            "${{ inputs.tags }}"

      - name: Combine manifests
        if: ${{ ! inputs.dry-run }}
        env:
          TAGS: "${{ steps.meta.outputs.tags }}"
        run: |
          set -ex
          readarray -t tags <<< $(echo -e "${TAGS}")
          for tag in "${tags[@]}"; do
            docker buildx imagetools create -t "$tag" \
              "$tag-amd64" \
              "$tag-arm64"
          done
